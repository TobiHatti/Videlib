@font-face {
  font-family: Nordica;
  src: url("NordicaHairline.otf") format("opentype");
}
html {
  background-color: rgb(7, 1, 31);
  background: linear-gradient(180deg, rgb(7, 1, 31) 0%, rgb(19, 1, 48) 100%);
  font-family: Nordica, Calibri, Arial, Helvetica, sans-serif;
  font-weight: lighter;
  font-size: inherit;
  height: 100%;
}

body {
  margin: 0;
  padding: 0;
  overflow: hidden;
}

header {
  height: 60px;
}
header h1 {
  text-align: center;
  font-weight: 100;
  color: white;
  font-size: 3em;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  margin: 0;
  margin-top: 10px;
  text-shadow: 0 0 5px rgb(225, 255, 225);
}

main {
  overflow-y: scroll;
  height: calc(100vh - 60px);
}

h1, h2 {
  text-align: center;
  font-weight: lighter;
}

.menuTileWrapper {
  position: relative;
  display: flex;
  margin: auto;
  color: white;
  width: 70%;
  min-width: 280px;
  flex-wrap: wrap;
  max-width: 750px;
  margin-top: 20px;
  animation: fadeIn;
  animation-duration: 1s;
}
.menuTileWrapper .menuTileContainer {
  margin: auto;
  flex-basis: 50%;
  min-width: 280px;
  animation: tileSpin;
  animation-duration: var(--animSpeed);
  animation-delay: var(--animOffset);
  animation-iteration-count: infinite;
  animation-timing-function: linear;
}
.menuTileWrapper .menuTileContainer .menuTileSubContainer {
  transition: all ease-out 0.3s;
  transform: scale(1);
}
.menuTileWrapper .menuTileContainer .menuTileSubContainer .tile {
  position: relative;
  background-color: rgba(225, 255, 225, 0.4);
  background: radial-gradient(circle, rgba(225, 255, 225, 0.1) 0%, rgba(177, 224, 177, 0.3) 100%);
  border: 1px solid white;
  border-radius: 40px;
  box-shadow: 0 0 20px -5px white;
  height: 340px;
  width: 280px;
  margin: 20px auto;
  padding-top: 50px;
  text-align: center;
  box-sizing: border-box;
  animation: tileTilt;
  animation-duration: var(--animSpeed);
  animation-delay: var(--animOffset);
  animation-iteration-count: infinite;
  animation-timing-function: ease-in-out;
  transition: all 0.3s ease-in-out;
  cursor: pointer;
}
.menuTileWrapper .menuTileContainer .menuTileSubContainer .tile span {
  font-size: 2.6em;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}
.menuTileWrapper .menuTileContainer .menuTileSubContainer .tile p {
  margin: 0;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}
.menuTileWrapper .menuTileContainer .menuTileSubContainer .tile::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  border: 1px solid rgba(255, 255, 255, 0.4);
  box-shadow: 0 0 10px 0 rgb(255, 255, 255);
  border-radius: 60px;
  overflow: hidden;
  height: 340px;
  width: 280px;
  z-index: -1;
  animation: tileTiltAfter;
  animation-duration: var(--animSpeed);
  animation-delay: var(--animOffset);
  animation-iteration-count: infinite;
  animation-timing-function: ease-in-out;
}
.menuTileWrapper .menuTileContainer .menuTileSubContainer .tile::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  border: 1px solid rgba(255, 255, 255, 0.6);
  box-shadow: 0 0 10px 0 rgb(255, 255, 255);
  border-radius: 50px;
  overflow: hidden;
  height: 340px;
  width: 280px;
  z-index: -1;
  animation: tileTiltBefore;
  animation-duration: var(--animSpeed);
  animation-delay: var(--animOffset);
  animation-iteration-count: infinite;
  animation-timing-function: ease-in-out;
}
.menuTileWrapper .menuTileContainer .menuTileSubContainer:hover {
  transition: all ease-out 0.2s;
  transform: scale(1.1);
}
.menuTileWrapper .menuTileContainer .menuTileSubContainer:hover .tile {
  background-color: rgba(246, 223, 255, 0.7);
  box-shadow: 0 0 30px 0 rgb(242, 223, 255);
}
.menuTileWrapper .menuTileContainer .flyOut {
  animation: tileFlyOut;
  animation-duration: 0.7s;
  animation-delay: var(--animOffset);
  animation-iteration-count: 1;
  animation-timing-function: ease-in-out;
  animation-fill-mode: forwards;
}

@keyframes tileSpin {
  from {
    transform: rotate(0deg) translateX(10px) rotate(0deg);
  }
  to {
    transform: rotate(360deg) translateX(10px) rotate(-360deg);
  }
}
@keyframes tileTilt {
  0% {
    transform: rotate(-2deg);
  }
  50% {
    transform: rotate(2deg);
  }
  100% {
    transform: rotate(-2deg);
  }
}
@keyframes tileTiltBefore {
  0% {
    transform: rotate(-3deg) scale(0.95) translateX(5px);
  }
  50% {
    transform: rotate(3deg) scale(0.95) translateX(-5px);
  }
  100% {
    transform: rotate(-3deg) scale(0.95) translateX(5px);
  }
}
@keyframes tileTiltAfter {
  0% {
    transform: rotate(4deg) scale(0.9) translateY(5px);
  }
  50% {
    transform: rotate(-4deg) scale(0.9) translateY(-5px);
  }
  100% {
    transform: rotate(4deg) scale(0.9) translateY(5px);
  }
}
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
@keyframes tileFlyOut {
  0% {
    transform: scale(1);
  }
  25% {
    transform: scale(1.1);
  }
  100% {
    transform: scale(0);
  }
}
.contentWrapper {
  position: relative;
  margin: auto;
  color: white;
  width: 90%;
  margin-top: 30px;
  margin-bottom: 40px;
  animation: fadeIn;
  animation-duration: 1s;
}
.contentWrapper .contentContainer {
  position: relative;
  background-color: rgba(225, 255, 225, 0.4);
  background: radial-gradient(circle, rgba(225, 255, 225, 0.1) 0%, rgba(177, 224, 177, 0.3) 100%);
  border: 1px solid white;
  border-radius: 40px;
  box-shadow: 0 0 20px -5px white;
  width: 100%;
  height: 100%;
  padding: 20px;
  box-sizing: border-box;
}
.contentWrapper .contentContainer::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  box-sizing: border-box;
  border: 1px solid rgba(255, 255, 255, 0.2);
  box-shadow: 0 0 10px 0 rgba(255, 255, 255, 0.6);
  border-radius: 40px;
  overflow: hidden;
  width: 100%;
  height: 100%;
  z-index: -1;
  animation: contentTiltAfter;
  animation-duration: 14.5s;
  animation-delay: -10.3s;
  animation-iteration-count: infinite;
  animation-timing-function: ease-in-out;
  animation-timing-function: linear;
}
.contentWrapper .contentContainer::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  box-sizing: border-box;
  border: 1px solid rgba(255, 255, 255, 0.4);
  box-shadow: 0 0 10px 0 rgba(255, 255, 255, 0.8);
  border-radius: 30px;
  overflow: hidden;
  width: 100%;
  height: 100%;
  z-index: -1;
  animation: contentTiltBefore;
  animation-duration: 10.2s;
  animation-delay: -0.3s;
  animation-iteration-count: infinite;
  animation-timing-function: ease-in-out;
  animation-timing-function: linear;
}

@keyframes contentTiltBefore {
  from {
    transform: rotate(0deg) translateX(10px) rotate(0deg);
  }
  to {
    transform: rotate(360deg) translateX(10px) rotate(-360deg);
  }
}
@keyframes contentTiltAfter {
  from {
    transform: rotate(0deg) translateX(-5px) rotate(0deg);
  }
  to {
    transform: rotate(360deg) translateX(-5px) rotate(-360deg);
  }
}
.characterBoxContainer {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: center;
  width: 100%;
  height: 100%;
}
.characterBoxContainer .characterBox {
  position: relative;
  width: 150px;
  height: 200px;
  border-radius: 30px;
  border: 1px solid white;
  margin: 15px 10px;
  text-align: center;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  box-sizing: border-box;
  transition: all 0.3s ease-in-out;
  padding-top: 10px;
  overflow: hidden;
  cursor: pointer;
}
.characterBoxContainer .characterBox:first-of-type {
  font-size: 10em;
  line-height: 190px;
}
.characterBoxContainer .characterBox::before, .characterBoxContainer .characterBox::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 150px;
  height: 200px;
  border-radius: 30px;
  border: 1px solid rgba(255, 255, 255, 0.5);
  box-sizing: border-box;
  opacity: 0;
  transition: all 0.3s ease-in-out;
}
.characterBoxContainer .characterBox:hover {
  background-color: rgba(246, 223, 255, 0.5);
  box-shadow: 0 0 30px 0 rgba(242, 223, 255, 0.486);
  transform: scale(1.1) rotate(-5deg);
  transition: all 0.2s ease-in-out;
}
.characterBoxContainer .characterBox:hover::before {
  opacity: 1;
  transform: scale(0.8) rotate(-1deg);
  transition: all 0.5s ease-in-out;
}
.characterBoxContainer .characterBox:hover::after {
  opacity: 1;
  transform: scale(0.6) rotate(-2deg);
  transition: all 0.5s ease-in-out;
}
.characterBoxContainer .characterBox .imgContainer {
  width: 130px;
  height: 130px;
  border-radius: 25px;
  margin: auto;
  border: 1px solid rgba(255, 255, 255, 0.5);
  overflow: hidden;
}
.characterBoxContainer .characterBox .imgContainer img {
  height: 100%;
  width: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}
.characterBoxContainer .characterBox span {
  display: block;
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
}
.characterBoxContainer .characterBox .name {
  margin-top: 10px;
}
.characterBoxContainer .characterBox .species {
  font-size: 0.8em;
  margin-top: 3px;
  color: gray;
}

.flyOut {
  animation: flyOut;
  animation-duration: 0.7s;
  animation-iteration-count: 1;
  animation-timing-function: ease-in-out;
  animation-fill-mode: forwards;
}

.fadeOut {
  animation: fadeOut;
  animation-duration: 0.3s;
  animation-iteration-count: 1;
  animation-timing-function: ease-in-out;
  animation-fill-mode: forwards;
}

@keyframes flyOut {
  0% {
    transform: scale(1);
  }
  100% {
    transform: scale(0);
  }
}
@keyframes fadeOut {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}
.characterInfo h1 {
  font-weight: lighter;
  text-align: center;
  font-size: 2.5em;
  margin-bottom: 0;
}
.characterInfo h2 {
  font-weight: lighter;
  text-align: center;
  font-size: 1.5em;
}
.characterInfo h2.species {
  margin-top: 4px;
  color: gray;
}
.characterInfo .mainImg {
  border-radius: 30px;
  margin: auto;
  border: 1px solid white;
  overflow: hidden;
  max-height: 450px;
  max-width: 350px;
}
.characterInfo .mainImg img {
  max-height: 100%;
  width: 100%;
  -o-object-fit: contain;
     object-fit: contain;
}
.characterInfo .imgCarousel {
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
  margin-top: 15px;
}
.characterInfo .imgCarousel .carouselItem {
  border-radius: 10px;
  margin: 5px;
  border: 1px solid white;
  overflow: hidden;
  height: 100px;
  width: 80px;
  flex-shrink: 0;
  display: flex;
  justify-content: center;
  align-content: center;
  transition: all 0.2s ease;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  cursor: pointer;
}
.characterInfo .imgCarousel .carouselItem img {
  max-height: 100%;
  width: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}
.characterInfo .imgCarousel .carouselItem:hover {
  background-color: rgba(246, 223, 255, 0.5);
  box-shadow: 0 0 30px 0 rgba(242, 223, 255, 0.486);
  transform: scale(1.1) rotate(-5deg);
}
.characterInfo .imgCarousel .addImage {
  font-size: 7em;
}
.characterInfo .familyTreeView {
  width: 100%;
  position: relative;
}
.characterInfo .familyTreeView canvas {
  position: absolute;
  width: 100%;
  height: 100%;
}
.characterInfo .familyTreeView .layerContainer {
  display: flex;
  flex-flow: column;
  width: 100%;
  height: 100%;
}
.characterInfo .familyTreeView .layerContainer .parentContainer,
.characterInfo .familyTreeView .layerContainer .midContainer,
.characterInfo .familyTreeView .layerContainer .childContainer {
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
}
.characterInfo .familyTreeView .layerContainer .parentContainer .treeNode,
.characterInfo .familyTreeView .layerContainer .midContainer .treeNode,
.characterInfo .familyTreeView .layerContainer .childContainer .treeNode {
  width: 100px;
  height: 120px;
  border: 1px solid white;
  border-radius: 20px;
  overflow: hidden;
  display: flex;
  flex-flow: column;
  align-items: center;
  margin: 25px 15px;
  transition: all 0.2s ease;
  cursor: pointer;
}
.characterInfo .familyTreeView .layerContainer .parentContainer .treeNode .nodeImg,
.characterInfo .familyTreeView .layerContainer .midContainer .treeNode .nodeImg,
.characterInfo .familyTreeView .layerContainer .childContainer .treeNode .nodeImg {
  width: 100%;
  height: 90px;
  margin: 0 auto;
  border: 1px solid rgba(255, 255, 255, 0.5);
  overflow: hidden;
}
.characterInfo .familyTreeView .layerContainer .parentContainer .treeNode .nodeImg img,
.characterInfo .familyTreeView .layerContainer .midContainer .treeNode .nodeImg img,
.characterInfo .familyTreeView .layerContainer .childContainer .treeNode .nodeImg img {
  max-height: 100%;
  width: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}
.characterInfo .familyTreeView .layerContainer .parentContainer .treeNode span,
.characterInfo .familyTreeView .layerContainer .midContainer .treeNode span,
.characterInfo .familyTreeView .layerContainer .childContainer .treeNode span {
  text-align: center;
  padding-top: 5px;
}
.characterInfo .familyTreeView .layerContainer .parentContainer .treeNode:hover,
.characterInfo .familyTreeView .layerContainer .midContainer .treeNode:hover,
.characterInfo .familyTreeView .layerContainer .childContainer .treeNode:hover {
  background-color: rgba(246, 223, 255, 0.5);
  box-shadow: 0 0 30px 0 rgba(242, 223, 255, 0.486);
  transform: scale(1.1) rotate(-5deg);
}
.characterInfo .noteContainer {
  max-width: 800px;
  margin: auto;
}
.characterInfo .noteContainer .newPostContainer {
  display: flex;
  width: 100%;
  margin-bottom: 10px;
}
.characterInfo .noteContainer .newPostContainer textarea {
  resize: none;
  width: 100%;
  border-radius: 20px;
}
.characterInfo .noteContainer .newPostContainer button {
  height: 100px;
  width: 80px;
  border-radius: 20px;
}
.characterInfo .noteContainer .note {
  border: 1px solid white;
  border-radius: 20px;
  margin: 5px;
  position: relative;
}
.characterInfo .noteContainer .note span {
  position: absolute;
  top: 6px;
  left: 20px;
  color: gray;
  font-size: 0.9em;
}
.characterInfo .noteContainer .note p {
  margin: 0;
  padding: 25px 12px 8px;
}

.personalSection,
.relationsSection {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  justify-content: center;
}
.personalSection input[type=text],
.personalSection input[type=date],
.personalSection select,
.relationsSection input[type=text],
.relationsSection input[type=date],
.relationsSection select {
  width: 240px;
  box-sizing: border-box;
}
.personalSection span,
.relationsSection span {
  width: 100px;
  display: inline-block;
  text-align: left;
  vertical-align: middle;
}
.personalSection table tr td,
.relationsSection table tr td {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
}

.addCharacterSubmitBtn {
  margin: 20px auto;
  display: block;
}/*# sourceMappingURL=layout.css.map */